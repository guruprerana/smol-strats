mdp

module grid
	x : [0..30] init 0;
	y : [0..30] init 10;

	[] 10*(y - 0) - 0*(x - 10) >= 0 & 0*(y - 10) - 10*(x - 10) >= 0 & -5/2*(y - 25/2) - 5/2*(x - 15/2) >= 0 & -15/2*(y - 10) - -5/2*(x - 0) >= 0 & 0*(y - 0) - -10*(x - 0) >= 0 -> (x' = x - 1);
	[] 10*(y - 0) - 0*(x - 10) >= 0 & 0*(y - 10) - 10*(x - 10) >= 0 & -5/2*(y - 25/2) - 5/2*(x - 15/2) >= 0 & -15/2*(y - 10) - -5/2*(x - 0) >= 0 & 0*(y - 0) - -10*(x - 0) >= 0 -> (x' = x + 1);
	[] 10*(y - 0) - 0*(x - 10) >= 0 & 0*(y - 10) - 10*(x - 10) >= 0 & -5/2*(y - 25/2) - 5/2*(x - 15/2) >= 0 & -15/2*(y - 10) - -5/2*(x - 0) >= 0 & 0*(y - 0) - -10*(x - 0) >= 0 -> (y' = y + 1);
	

	[] 15/2*(y - 25/2) - 5/2*(x - 15/2) >= 0 & -15/2*(y - 20) - 15/2*(x - 0) >= 0 & 0*(y - 10) - -10*(x - 0) >= 0 -> (y' = y + 1);
	

	[] 15/2*(y - 25/2) - -15/2*(x - 15/2) >= 0 & 5/2*(y - 40/3) - 5/6*(x - 10) >= 0 & 0*(y - 20) - 20/3*(x - 10) >= 0 & -10*(y - 20) - 0*(x - 0) >= 0 -> (x' = x - 1);
	[] 15/2*(y - 25/2) - -15/2*(x - 15/2) >= 0 & 5/2*(y - 40/3) - 5/6*(x - 10) >= 0 & 0*(y - 20) - 20/3*(x - 10) >= 0 & -10*(y - 20) - 0*(x - 0) >= 0 -> (x' = x + 1);
	[] 15/2*(y - 25/2) - -15/2*(x - 15/2) >= 0 & 5/2*(y - 40/3) - 5/6*(x - 10) >= 0 & 0*(y - 20) - 20/3*(x - 10) >= 0 & -10*(y - 20) - 0*(x - 0) >= 0 -> (y' = y - 1);
	

	[] 10*(y - 20) - 0*(x - 10) >= 0 & 0*(y - 25) - 5*(x - 10) >= 0 & -10*(y - 20) - -5*(x - 0) >= 0 -> (x' = x - 1);
	[] 10*(y - 20) - 0*(x - 10) >= 0 & 0*(y - 25) - 5*(x - 10) >= 0 & -10*(y - 20) - -5*(x - 0) >= 0 -> (x' = x + 1);
	[] 10*(y - 20) - 0*(x - 10) >= 0 & 0*(y - 25) - 5*(x - 10) >= 0 & -10*(y - 20) - -5*(x - 0) >= 0 -> (y' = y + 1);
	[] 10*(y - 20) - 0*(x - 10) >= 0 & 0*(y - 25) - 5*(x - 10) >= 0 & -10*(y - 20) - -5*(x - 0) >= 0 -> (y' = y - 1);
	

	[] 10*(y - 25) - 5*(x - 10) >= 0 & 0*(y - 30) - 5*(x - 10) >= 0 & -10*(y - 30) - 0*(x - 0) >= 0 & 0*(y - 20) - -10*(x - 0) >= 0 -> (x' = x - 1);
	[] 10*(y - 25) - 5*(x - 10) >= 0 & 0*(y - 30) - 5*(x - 10) >= 0 & -10*(y - 30) - 0*(x - 0) >= 0 & 0*(y - 20) - -10*(x - 0) >= 0 -> (y' = y + 1);
	

	[] 0*(y - 25) - -5*(x - 10) >= 0 & 10*(y - 30) - 5*(x - 20) >= 0 & -10*(y - 30) - 0*(x - 10) >= 0 -> (x' = x + 1);
	[] 0*(y - 25) - -5*(x - 10) >= 0 & 10*(y - 30) - 5*(x - 20) >= 0 & -10*(y - 30) - 0*(x - 10) >= 0 -> (y' = y + 1);
	[] 0*(y - 25) - -5*(x - 10) >= 0 & 10*(y - 30) - 5*(x - 20) >= 0 & -10*(y - 30) - 0*(x - 10) >= 0 -> (y' = y - 1);
	

	[] -10*(y - 25) - -5*(x - 10) >= 0 & 0*(y - 20) - -5*(x - 10) >= 0 & 20*(y - 20) - 0*(x - 30) >= 0 & 0*(y - 30) - 10*(x - 30) >= 0 & -10*(y - 30) - 0*(x - 20) >= 0 -> (x' = x - 1);
	[] -10*(y - 25) - -5*(x - 10) >= 0 & 0*(y - 20) - -5*(x - 10) >= 0 & 20*(y - 20) - 0*(x - 30) >= 0 & 0*(y - 30) - 10*(x - 30) >= 0 & -10*(y - 30) - 0*(x - 20) >= 0 -> (x' = x + 1);
	[] -10*(y - 25) - -5*(x - 10) >= 0 & 0*(y - 20) - -5*(x - 10) >= 0 & 20*(y - 20) - 0*(x - 30) >= 0 & 0*(y - 30) - 10*(x - 30) >= 0 & -10*(y - 30) - 0*(x - 20) >= 0 -> (y' = y + 1);
	[] -10*(y - 25) - -5*(x - 10) >= 0 & 0*(y - 20) - -5*(x - 10) >= 0 & 20*(y - 20) - 0*(x - 30) >= 0 & 0*(y - 30) - 10*(x - 30) >= 0 & -10*(y - 30) - 0*(x - 20) >= 0 -> (y' = y - 1);
	

	[] -20*(y - 20) - 0*(x - 10) >= 0 & 0*(y - 40/3) - -20/3*(x - 10) >= 0 & 20*(y - 20) - 20/3*(x - 30) >= 0 -> (x' = x + 1);
	

	[] -20*(y - 40/3) - -20/3*(x - 10) >= 0 & 0*(y - 10) - -10/3*(x - 10) >= 0 & 10*(y - 0) - -10*(x - 20) >= 0 & 10*(y - 0) - 0*(x - 30) >= 0 & 0*(y - 20) - 20*(x - 30) >= 0 -> (x' = x + 1);
	[] -20*(y - 40/3) - -20/3*(x - 10) >= 0 & 0*(y - 10) - -10/3*(x - 10) >= 0 & 10*(y - 0) - -10*(x - 20) >= 0 & 10*(y - 0) - 0*(x - 30) >= 0 & 0*(y - 20) - 20*(x - 30) >= 0 -> (y' = y - 1);
	

	[] -10*(y - 10) - 10*(x - 10) >= 0 & 0*(y - 0) - -10*(x - 10) >= 0 & 10*(y - 0) - 0*(x - 20) >= 0 -> (x' = x - 1);
	[] -10*(y - 10) - 10*(x - 10) >= 0 & 0*(y - 0) - -10*(x - 10) >= 0 & 10*(y - 0) - 0*(x - 20) >= 0 -> (x' = x + 1);
	[] -10*(y - 10) - 10*(x - 10) >= 0 & 0*(y - 0) - -10*(x - 10) >= 0 & 10*(y - 0) - 0*(x - 20) >= 0 -> (y' = y + 1);
	

	[] 0*(y - 40/3) - 10/3*(x - 10) >= 0 & -5/2*(y - 25/2) - -5/6*(x - 15/2) >= 0 & 5/2*(y - 10) - -5/2*(x - 10) >= 0 -> (x' = x - 1);
	[] 0*(y - 40/3) - 10/3*(x - 10) >= 0 & -5/2*(y - 25/2) - -5/6*(x - 15/2) >= 0 & 5/2*(y - 10) - -5/2*(x - 10) >= 0 -> (y' = y - 1);
	

endmodule

label "target" = -20*(y - 20) - 0*(x - 10) >= 0 & 0*(y - 40/3) - -20/3*(x - 10) >= 0 & 20*(y - 20) - 20/3*(x - 30) >= 0;

